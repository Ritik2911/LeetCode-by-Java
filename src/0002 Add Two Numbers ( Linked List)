/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 
class Solution {
    
    ListNode addNode(ListNode l1, ListNode l2, int carry){
        int num =0;
        if(l1 == null && l2 != null){
        
            num = (l2.val + carry)%10;
            carry = (l2.val + carry)/10;
            ListNode head = new ListNode(num,addNode(l1, l2.next, carry));
            return head;
            
        }else if(l2 == null && l1 != null){
        
            num = (l1.val+ carry)%10;
            carry = (l1.val+ carry)/10;
            ListNode head = new ListNode(num,addNode(l1.next, l2, carry));
            return head;
            
        }else if(l1 == null && l2 == null){
        
            if(carry != 0){
                ListNode head = new ListNode(carry);
                return head;
            }
            
            return l1;
            
        }
        
        num = (l1.val+l2.val + carry)%10;
        carry = (l1.val+l2.val + carry)/10;
        ListNode head = new ListNode(num,addNode(l1.next, l2.next, carry));
        
        return head;
    }
    
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
    
        ListNode head = new ListNode();
        int carry =0;
        head = addNode(l1,l2,0);
        
        return head;
    }
}
